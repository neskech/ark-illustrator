import EventManager from '~/util/eventSystem/eventManager';
import { clearFramebuffer } from '../util/renderUtils';
import { type RenderContext } from '../renderer';
import {  Vector3 } from 'matrixgl_fork';

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! TYPE DEFINITIONS
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

export type FillRendererContext = {
  tolerance: number;
} & RenderContext;

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! MAIN CLASS
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

export default class FillToolRenderer {
  private color: Vector3;

  constructor() {
    this.color = new Vector3(0, 0, 0);
    this.setupEvents();
  }

  public render(context: FillRendererContext) {
    const framebuffer = context.layerManager.getCanvasFramebufferForMutation();
    clearFramebuffer(framebuffer, this.color.x, this.color.y, this.color.z, 1);
  }

  private setupEvents() {
    EventManager.subscribe('colorChanged', (color) => {
      this.color = color;
    });
  }
}

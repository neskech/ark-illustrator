import { unreachable } from '~/util/general/funUtils';
import NothingStabilizer, { type NothingStabilizerSettings } from './nothingStabilizer';
import { type BrushPoint } from '../brushTool';
import SpringStabilizer, { type SpringStabilizerSettings } from './springStabilizer';

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! TYPE DEFINITIONS
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

export type StabilizerSettings = NothingStabilizerSettings | SpringStabilizerSettings;

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! MAIN CLASS
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
export abstract class Stabilizer {
  abstract addPoint(point: BrushPoint): void;
  abstract getProcessedCurve(): BrushPoint[];
  abstract getRawCurve(): BrushPoint[];
  abstract update(deltaTime: number): void;
  abstract reset(): void;

  static getStabilizerOfType(settings: StabilizerSettings): Stabilizer {
    switch (settings.type) {
      case 'spring':
        return new SpringStabilizer(settings);
      case 'nothing':
        return new NothingStabilizer(settings);
      default:
        return unreachable();
    }
  }

  protected castSettings<T extends StabilizerSettings>(settings: StabilizerSettings): T {
    return settings as T;
  }
}

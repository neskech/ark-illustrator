import { type RenderContext } from '~/drawingEditor/renderer/renderer';
import type ToolRenderers from '~/drawingEditor/renderer/toolRenderers/toolRendererList';
import { Tool, ToolContext, ToolUpdateContext } from '../tool';
import { clearFramebuffer } from '~/drawingEditor/renderer/util/renderUtils';

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! CLASS DEFINITION
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

export class FillTool extends Tool {
  isDown: boolean;
  constructor() {
    super();
    this.isDown = false;
  }

  updateAndRender(context: ToolUpdateContext, toolRenderers: ToolRenderers): void {
    if (this.isDown) {
      const tolerance = context.settings.fillSettings.tolerance;
      toolRenderers.getFillToolRenderer().render({ tolerance, ...context });
      this.isDown = false;
    }
  }

  protected pointerDown(context: ToolContext, event: PointerEvent): void {
    this.isDown = true;
  }
}
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
//! HELPERS
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

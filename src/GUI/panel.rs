use egui::{Context, CtxRef};

use crate::Core::state::AppData;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Each panel stores the same data and has the same interfacable function
//Could have made a panel trait and stored a list of Box<dyn Panel> but that's unnescary
pub struct Panel{
    pos: (f32, f32),
    pub enabled: bool,
    pub renderFunction: fn(&mut AppData, eguiCtx: &CtxRef) -> bool 
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

pub fn createToolPanel() -> Panel{
    fn renderFunc(data: &mut AppData, eguiCtx: &CtxRef) -> bool {

        egui::SidePanel::left("my_side_panel").show(eguiCtx, |ui| {
            if ui
                .add(egui::Button::new(
                    "hello!",
                ).fill(egui::Color32::from_rgb(100, 100, 100)))
                .clicked()
            {

            }
        });
        true
    }

    Panel { 
        pos: (0f32, 0f32), //top left
        enabled: true, 
        renderFunction: renderFunc, 
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

fn createSettingsPanel() -> Panel{
    fn renderFunc(data: &mut AppData, eguiCtx: &CtxRef) -> bool {
        true
    }

    Panel { 
        pos: (0f32, 0f32), //top left
        enabled: true, 
        renderFunction: renderFunc, 
    }
}